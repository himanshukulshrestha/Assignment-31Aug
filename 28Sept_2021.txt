1. put student data into a file student.dat


 101 sabbir 45 54 67 81 71 66
 102 amit 95 66 62 88 79 63
....

Read data from student.dat and compute percentage of each student and sort student data based on percentage.


2. Create a class Item with following attributes

   itemId int
   itemDescription String
   itemQuantityAvailable int
   itemUnitPrice double
   itemDiscountPercentage int

 Serialize List of Items(at least 4 items) and deserialize those items and print on console.

3. Create a class Employee with following attributes

    empId
    empFirstName
    empLastName
    empDOB
    empGender

  create subclass Manager of Employee with following attributes

   managerId

  Serialize object of manager except empDOB and deserialize and print details on console.

4. Create Category,Subcategory,Product,Item classes and associate them.

   Serialize Category to JSON  
   Deserialze category from JSON and print on console

---------------------------------------------------Solutions-------------------------------------------
1. put student data into a file student.dat


 101 sabbir 45 54 67 81 71 66
 102 amit 95 66 62 88 79 63
....

Read data from student.dat and compute percentage of each student and sort student data based on percentage.

-------------------------------------------------------------------------------------------------------------

package com.yash.io;

import java.nio.file.Files;
import java.util.*;
import java.io.File;

public class StudentDatFile {

	public static void main(String[] args) {

		ArrayList<String> name = new ArrayList<>();
		ArrayList<Double> mark = new ArrayList<>();
		ArrayList copy = new ArrayList();
		String s = "";
		try {

			String[] line = Files.readAllLines(new File(
					"C:\\\\\\\\Users\\\\\\\\himanshu.kulshrestha\\\\\\\\Documents\\\\\\\\Others\\\\\\\\student.dat")
							.toPath())
					.toArray(new String[0]);
			double no = 0;
			// System.out.println(line[0]);

			for (int i = 0; i < line.length; i++) {

				String[] strArray = line[i].split(" ");

				for (int j = 0; j < strArray.length; j++) {

					if (j >= 2) {
						s = strArray[j];
						no += Double.parseDouble(s);
						s = "";
					}
				}

				mark.add(no / 6);//

				// System.out.println(copy);//98/29/4
				name.add(strArray[1]);

				no = 0;
			}
			copy.addAll(mark);
			Collections.sort(mark);
			for (int x = 0; x < mark.size(); x++) {
				for (int v = 0; v < mark.size(); v++) {
					if (mark.get(x).equals(copy.get(v))) {
						System.out.println(name.get(v) + " " + copy.get(v));

					}

				}
			}

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}


2. Create a class Item with following attributes

   itemId int
   itemDescription String
   itemQuantityAvailable int
   itemUnitPrice double
   itemDiscountPercentage int

 Serialize List of Items(at least 4 items) and deserialize those items and print on console.\\

-----------------------------------------------------------------------------------------------------------

package com.yash.serialization;

import java.io.Serializable;

public class Items implements Serializable {
	
	   /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int itemId;
	   private String itemDescription;
	   private int itemQuantityAvailable; 
	   private double itemUnitPrice;
	   private int itemDiscountPercentage;
	   
	   public Items() {}

	public Items(int itemId, String itemDescription, int itemQuantityAvailable, double itemUnitPrice,
			int temDiscountPercentage) {
		super();
		this.itemId = itemId;
		this.itemDescription = itemDescription;
		this.itemQuantityAvailable = itemQuantityAvailable;
		this.itemUnitPrice = itemUnitPrice;
		this.itemDiscountPercentage = temDiscountPercentage;
	}

	public int getItemId() {
		return itemId;
	}

	public void setItemId(int itemId) {
		this.itemId = itemId;
	}

	public String getItemDescription() {
		return itemDescription;
	}

	public void setItemDescription(String itemDescription) {
		this.itemDescription = itemDescription;
	}

	public int getItemQuantityAvailable() {
		return itemQuantityAvailable;
	}

	public void setItemQuantityAvailable(int itemQuantityAvailable) {
		this.itemQuantityAvailable = itemQuantityAvailable;
	}

	public double getItemUnitPrice() {
		return itemUnitPrice;
	}

	public void setItemUnitPrice(double itemUnitPrice) {
		this.itemUnitPrice = itemUnitPrice;
	}

	public int getTemDiscountPercentage() {
		return itemDiscountPercentage;
	}

	public void setTemDiscountPercentage(int temDiscountPercentage) {
		this.itemDiscountPercentage = temDiscountPercentage;
	}

	@Override
	public String toString() {
		return "Items [itemId=" + itemId + ", itemDescription=" + itemDescription + ", itemQuantityAvailable="
				+ itemQuantityAvailable + ", itemUnitPrice=" + itemUnitPrice + ", temDiscountPercentage="
				+ itemDiscountPercentage + "]";
	}
	   
	   

}

//Serialization of Items------------------------------------
package com.yash.serialization;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;

public class ItemSerialization {

	public static void main(String[] args) {
		
		Items item = new Items();
	
		item.setItemId(1);
		item.setItemDescription("LAPTOP");
		item.setItemQuantityAvailable(5);
		item.setItemUnitPrice(900000);
		item.setTemDiscountPercentage(10);
		
		try (OutputStream os = new FileOutputStream("C:\\Users\\himanshu.kulshrestha\\Documents\\Others\\items.ser");
			ObjectOutputStream oos = new ObjectOutputStream(os);) {
			oos.writeObject(item);
			System.out.println("Serialization : Successfully DONE");

		} catch (IOException e) {
			System.out.println("Serialization : Fail");
			e.printStackTrace();
		}
		System.out.println();
		System.out.println(item);

	}

}

//De-serialization of items

package com.yash.serialization;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;

public class ItemDeserialization {
	public static void main(String[] args) {

		

		try (InputStream fis = new FileInputStream("C:\\Users\\himanshu.kulshrestha\\Documents\\Others\\items.ser");
				ObjectInputStream ois = new ObjectInputStream(fis);
			) 
		{
			Items item = (Items)ois.readObject();
			System.out.println(item);

		}
		catch (IOException | ClassNotFoundException e) {
			e.printStackTrace();
		}
	}

}



3. Create a class Employee with following attributes

    empId
    empFirstName
    empLastName
    empDOB
    empGender

  create subclass Manager of Employee with following attributes

   managerId

  Serialize object of manager except empDOB and deserialize and print details on console.


------------------------------------------------------------------------------------------------
package com.yash.serialization;

import java.io.Serializable;
import java.util.List;

public class Employee implements Serializable{
	
	 /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int empId;
	 private String empFirstName;
	 private String empLastName;
	 private transient String empDOB;
	 private String empGender;
	 private List<Manager> manager;
	 
	 public Employee() {}

	public Employee(int empId, String empFirstName, String empLastName, String empDOB, String empGender,
			List<Manager> manager) {
		super();
		this.empId = empId;
		this.empFirstName = empFirstName;
		this.empLastName = empLastName;
		this.empDOB = empDOB;
		this.empGender = empGender;
		this.manager = manager;
	}

	public void setEmpDOB(String empDOB) {
		this.empDOB = empDOB;
	}

	public int getEmpId() {
		return empId;
	}

	public void setEmpId(int empId) {
		this.empId = empId;
	}

	public String getEmpFirstName() {
		return empFirstName;
	}

	public void setEmpFirstName(String empFirstName) {
		this.empFirstName = empFirstName;
	}

	public String getEmpLastName() {
		return empLastName;
	}

	public void setEmpLastName(String empLastName) {
		this.empLastName = empLastName;
	}

	public String getEmpDOB() {
		return empDOB;
	}

	public String getEmpGender() {
		return empGender;
	}

	public void setEmpGender(String empGender) {
		this.empGender = empGender;
	}

	public List<Manager> getManager() {		
		return manager;
	}

	public void setManager(List<Manager> manager) {
		this.manager = manager;
	}

	@Override
	public String toString() {
		return "Employee [empId=" + empId + ", empFirstName=" + empFirstName + ", empLastName=" + empLastName
				+ ", empDOB=" + empDOB + ", empGender=" + empGender + ", manager=" + manager + "]";
	}
}

----------------------Manager CLass-----------------------
package com.yash.serialization;

import java.io.Serializable;

public class Manager implements Serializable{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int managerId;
	
	public Manager() {}
	
	public Manager(int managerId) {
		super();
		this.managerId = managerId;
	}



	public int getManagerId() {
		return managerId;
	}

	public void setManagerId(int managerId) {
		this.managerId = managerId;
	}

	@Override
	public String toString() {
		return "Manager [managerId=" + managerId + "]";
	}
	
	
	
}
----------------------Employee Serialization except DOB-----------------

package com.yash.serialization;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;

public class EmployeeSerialization {

	public static void main(String[] args) {
		Employee employee = new Employee();

		employee.setEmpId(1);
		employee.setEmpFirstName("Himanshu");
		employee.setEmpLastName("Kulshrestha");
		employee.setEmpDOB("23/oct");
		employee.setEmpGender("male");

		Manager manager = new Manager();
		manager.setManagerId(1);
		List<Manager> managerList = new ArrayList<>();
		managerList.add(manager);

		employee.setManager(managerList);

		try (OutputStream os = new FileOutputStream("C:\\Users\\himanshu.kulshrestha\\Documents\\Others\\emp.ser");
				ObjectOutputStream oos = new ObjectOutputStream(os);) {
			oos.writeObject(employee);
			System.out.println("Serialization : Successfully DONE");

		} catch (IOException e) {
			System.out.println("Serialization : Fail");
			e.printStackTrace();
		}
		System.out.println();
		System.out.println(employee);
		
		
	}

}
----------------------------De-Serialization of Employee-------------------------
package com.yash.serialization;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.util.ListIterator;

public class EmployeeDeSerialization {

	Employee e = new Employee();
	
	
	public static void main(String[] args) {
		try (InputStream fis = new FileInputStream("C:\\Users\\himanshu.kulshrestha\\Documents\\Others\\emp.ser");
				ObjectInputStream ois = new ObjectInputStream(fis);) {
			Employee employee = (Employee) ois.readObject();
			System.out.println("De-Serialization : "+"\n");
			System.out.println(employee);

		} catch (IOException | ClassNotFoundException e) {
			e.printStackTrace();
		}
	}

}

4. Create Category,Subcategory,Product,Item classes and associate them.

   Serialize Category to JSON  
   Deserialze category from JSON and print on console

---------------Item CLass-----------------
package com.yash.serialization.json;

import java.io.Serializable;

public class Item implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	public Item() {}
	
	private String itemId;
	private String itemDescription;
	private double itemPrice;
	private int itemQuantity;
	
	public int getItemQuantity() {
		return itemQuantity;
	}
	public void setItemQuantity(int itemQuantity) {
		this.itemQuantity = itemQuantity;
	}
	public String getItemId() {
		return itemId;
	}
	public void setItemId(String itemId) {
		this.itemId = itemId;
	}
	public String getItemDescription() {
		return itemDescription;
	}
	public void setItemDescription(String itemDescription) {
		this.itemDescription = itemDescription;
	}
	public double getItemPrice() {
		return itemPrice;
	}
	public void setItemPrice(double itemPrice) {
		this.itemPrice = itemPrice;
	}
	@Override
	public String toString() {
		return "Item [itemId=" + itemId + ", itemDescription=" + itemDescription + ", itemPrice=" + itemPrice + "]";
	}
	
	
}
---------------------------Product Class-----------------------
package com.yash.serialization.json;

import java.io.Serializable;
import java.util.List;

public class Product implements Serializable{
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String productId;
	private String productDescription;
	private List<Item> items;
	
	public Product() {}

	public String getProductId() {
		return productId;
	}

	public void setProductId(String productId) {
		this.productId = productId;
	}

	public String getProductDescription() {
		return productDescription;
	}

	public void setProductDescription(String productDescription) {
		this.productDescription = productDescription;
	}

	public List<Item> getItems() {
		return items;
	}

	public void setItems(List<Item> items) {
		this.items = items;
	}

	@Override
	public String toString() {
		return "Product [productId=" + productId + ", productDescription=" + productDescription + ", items=" + items
				+ "]";
	}
	

}
--------------------SubCategory Class-----------------------------
package com.yash.serialization.json;

import java.io.Serializable;
import java.util.List;

public class SubCategory implements Serializable{
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String subCategoryId;
	private String subCategoryDescription;
	private List<Product> products;
	
	public SubCategory() {}

	public String getSubCategoryId() {
		return subCategoryId;
	}

	public void setSubCategoryId(String subCategoryId) {
		this.subCategoryId = subCategoryId;
	}

	public String getSubCategoryDescription() {
		return subCategoryDescription;
	}

	public void setSubCategoryDescription(String subCategoryDescription) {
		this.subCategoryDescription = subCategoryDescription;
	}

	public List<Product> getProducts() {
		return products;
	}

	public void setProducts(List<Product> products) {
		this.products = products;
	}

	@Override
	public String toString() {
		return "SubCategory [subCategoryId=" + subCategoryId + ", subCategoryDescription=" + subCategoryDescription
				+ ", products=" + products + "]";
	}
	

}
------------------Category Class------------------------
package com.yash.serialization.json;

import java.io.Serializable;
import java.util.List;

public class Category implements Serializable{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String categoryId;
	private String categoryDescription;
	private List<SubCategory> categories;
	
	public Category() {}

	public String getCategoryId() {
		return categoryId;
	}

	public void setCategoryId(String categoryId) {
		this.categoryId = categoryId;
	}

	public String getCategoryDescription() {
		return categoryDescription;
	}

	public void setCategoryDescription(String categoryDescription) {
		this.categoryDescription = categoryDescription;
	}

	public List<SubCategory> getCategories() {
		return categories;
	}

	public void setCategories(List<SubCategory> categories) {
		this.categories = categories;
	}

	@Override
	public String toString() {
		return "Category [categoryId=" + categoryId + ", categoryDescription=" + categoryDescription + ", categories="
				+ categories + "]";
	}
	
	
}
-----------------Category Json-------------------
package com.yash.serialization.json;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.Arrays;

import org.codehaus.jackson.map.ObjectMapper;

public class CategoryJson {

	public static void main(String[] args) {

		
		ObjectMapper mapper=new ObjectMapper();
		try {
			
			
			Item item1=new Item();
			item1.setItemId("ITEM001");
			item1.setItemDescription("ITEM 1 description");
			item1.setItemPrice(45000);
			
			Item item2=new Item();
			item2.setItemId("ITEM002");
			item2.setItemDescription("ITEM 2 description");
			item2.setItemPrice(25000);
			
			Item item3=new Item();
			item3.setItemId("ITEM003");
			item3.setItemDescription("ITEM 3 description");
			item3.setItemPrice(7000);
			
			Product product1=new Product();
			product1.setProductId("PROD001");
			product1.setProductDescription("PROD 001 description");
			product1.setItems(Arrays.asList(new Item[] {item1,item2}));
			
			Product product2=new Product();
			product2.setProductId("PROD002");
			product2.setProductDescription("PROD 002 description");
			product2.setItems(Arrays.asList(new Item[] {item3}));
			
			
			SubCategory subCategory1=new SubCategory();
			subCategory1.setSubCategoryId("SubCategory001");
			subCategory1.setSubCategoryDescription("SubCategory 1 description");
			subCategory1.setProducts(Arrays.asList(new Product[] {product1}));
			
			SubCategory subCategory2=new SubCategory();
			subCategory2.setSubCategoryId("SubCategory002");
			subCategory2.setSubCategoryDescription("SubCategory 2 description");
			subCategory2.setProducts(Arrays.asList(new Product[] {product2}));
			
			Category category1=new Category();
			category1.setCategoryId("Category001");
			category1.setCategoryDescription("Category 1 description");
			category1.setCategories(Arrays.asList(new SubCategory[] {subCategory1}));
			
//			Category category2=new Category();
//			category2.setCategoryId("Category002");
//			category2.setCategoryDescription("Category 2 description");
//			category2.setCategories(Arrays.asList(new SubCategory[] {subCategory2}));
			try {	
		//mapper.writeValue(System.out, company);
		
		}catch(Exception e) {}
		finally {
			System.out.close();		}
		
		
		//serialization
		OutputStream os=new FileOutputStream("C:\\\\Users\\\\himanshu.kulshrestha\\\\Documents\\\\Others\\\\category.json");
		mapper.writeValue(os, category1);
		
		InputStream is=new FileInputStream("C:\\\\\\\\Users\\\\\\\\himanshu.kulshrestha\\\\\\\\Documents\\\\\\\\Others\\\\\\\\category.json");
		Category categoryFromJson=mapper.readValue(is, Category.class);
		System.out.println(categoryFromJson);
		PrintStream ps=new PrintStream(System.out);
		ps.printf("Test");
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

}
